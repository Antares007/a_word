o {
  G(Yellow  ) { P, Lime    (a, o, s); }
  G(Purple  ) { P; }
  G(Red     ) { P, Maroon  (a, o, s); }
  G(Green   ) { P, Olive   (a, o, s); }
  G(Blue    ) { P, Navy    (a, o, s); }
}.
b {
  G(Navy    ) { P, Blue    (a, o, s); }
  G(Lime    ) { P, Green   (a, o, s); }
  G(Maroon  ) { P, Red     (a, o, s); }
  G(Fuchsia ) { P; }
  G(Olive   ) { P, Yellow  (a, o, s); }
}.
id2 { }.
id  { }.
tab {
  G(Navy    ) { P, Blue    (a, o, s); }
  G(Lime    ) { P, Green   (a, o, s); }
  G(Maroon  ) { P, Red     (a, o, s); }
  G(Fuchsia ) {}
  G(Olive   ) { P, ((n_t*)o)[s](a, o, s + 1); }
}.
not {
  G(Yellow) { Lime  (a, o, s); }
  G(Red   ) { Yellow(a, o, s); }
  G(Green ) { Olive (a, o, s); }
  G(Lime  ) { Green (a, o, s); }
}.
and {
  G(Yellow) { Lime  (a, o, s); }
  G(Green ) { Yellow(a, o, s); }
  G(Lime  ) { Green (a, o, s); }
}.
or {
  G(Yellow) { Lime  (a, o, s); }
  G(Blue  ) { Yellow(a, o, s); }
  G(Green ) { Olive (a, o, s); }
  G(Lime  ) { Green (a, o, s); }
}.
orand {
  G(Yellow) { Lime  (a, o, s); }
  G(Blue  ) { Yellow(a, o, s); }
  G(Green ) { Yellow(a, o, s); }
  G(Lime  ) { Green (a, o, s); }
}.
one {
  G(Lime  ) { P;
    o[a++] = (void*)1;
    Lime(a, o, s);
  }
}.
two {
  char* b[512];
  long  t = 0;
  G(Purple) {
    n_t w = b;
    long (*T)(void*m, char*n) = o[2];
    t += T(w + t, "tab"); t += T(w + t, "id2"); t += T(w + t, "o"); (w + 16)(a, o, s);
    Purple(a, o, s);
  }
  G(Lime) {
    o[--s] = Lime;
    ((n_t)b+00)(a, o, s); 
  }
}.
//  plus {
//    G(Green) {
//      long r = (long)ο[--α];
//      long l = (long)ο[--α];
//      ο[α++] = (void*)(l + r);
//      Green(ο, σ, α, ρ);
//    }
//  }.
//  printlll {
//    void (*p)(const char *, ...);
//    G(Green) {
//      p = ο[0];
//      long v1 = (long)ο[--α];
//      long v2 = (long)ο[--α];
//      long v3 = (long)ο[--α];
//      p("%ld %ld %ld\n", v1, v2, v3);
//      ((void (*)(long))ο[1])(200000);
//      Green(ο, σ, α, ρ);
//    }
//  }.
