b {
  G(Navy    ) { P_; (Yellow_ray + t * 16)(!t, a, b, o, s); }
  G(Lime    ) { P; Green                ( t, a, b, o, s); }
  G(Maroon  ) { P; Red                  ( t, a, b, o, s); }
  G(Fuchsia ) { P; if (t) Yellow        ( t, a, b, o, s); }
  G(Olive   ) { P_; (Yellow_ray + t * 16)(!t, a, b, o, s); }
}.
o {
  G(Yellow  ) { P; Lime    (t, a, b, o, s); }
  G(Purple  ) { P; Fuchsia (t, a, b, o, s); }
  G(Red     ) { P; Maroon  (t, a, b, o, s); }
  G(Green   ) { P; Olive   (t, a, b, o, s); }
  G(Blue    ) { P; Navy    (t, a, b, o, s); }
}.
tab {
  G(Yellow  ) { P; Yellow           (t, a, b,     o, s); }
  G(Navy    ) { P; ((n_t *)o)[b + 0](t, a, b + 3, o, s); }
  G(Lime    ) { P; Green            (t, a, b,     o, s); }
  G(Maroon  ) { P; ((n_t *)o)[b + 2](t, a, b + 3, o, s); }
  G(Fuchsia ) { P; ((n_t *)o)[b + 1](t, a, b + 3, o, s); }
  G(Olive   ) { P; ((n_t *)o)[b + 1](t, a, b + 3, o, s); }
}.

set_bo { G(Green) { Green(t, 3, b, o, "bo."  ); } }.
set_ba { G(Green) { Green(t, 3, b, o, "ba"); } }.

print {
  G(Green) { P;
    Printf(">G>");
    for(long i = 3; i < a; i++)
      if((long)o[i] < 1000)
        Printf("%ld ", (long)o[i]);
      else
        Printf("%s ", o[i]);
    Printf("<G<\n");
    USleep(20000);
    a = 3;
    Green(t,a,b,o,s);
  }
}.
NOT {
  G(Yellow  ) { P; Lime  (t, a, b, o, s); }
  G(Red     ) { P; Yellow(t, a, b, o, s); }
  G(Green   ) { P; Olive (t, a, b, o, s); }
  G(Lime    ) { P; Green (t, a, b, o, s); } }.
AND {
  G(Yellow  ) { P; Lime  (t, a, b, o, s); }
  G(Green   ) { P; Yellow(t, a, b, o, s); }
  G(Lime    ) { P; Green (t, a, b, o, s); } }.
OR {
  G(Yellow  ) { P; Lime  (t, a, b, o, s); }
  G(Blue    ) { P; Yellow(t, a, b, o, s); }
  G(Green   ) { P; Olive (t, a, b, o, s); }
  G(Lime    ) { P; Green (t, a, b, o, s); } }.
ORAND {
  G(Yellow  ) { P; Lime  (t, a, b, o, s); }
  G(Blue    ) { P; Yellow(t, a, b, o, s); }
  G(Green   ) { P; Yellow(t, a, b, o, s); }
  G(Lime    ) { P; Green (t, a, b, o, s); } }.
id {
  G(Yellow  ) { P_; Yellow  (t, a, b, o, s); }
  G(Purple  ) { P_; Purple  (t, a, b, o, s); }
  G(Red     ) { P_; Red     (t, a, b, o, s); }
  G(Green   ) { P_; Green   (t, a, b, o, s); }
  G(Blue    ) { P_; Blue    (t, a, b, o, s); }
  G(Navy    ) { P_; Navy    (t, a, b, o, s); }
  G(Lime    ) { P_; Lime    (t, a, b, o, s); }
  G(Maroon  ) { P_; Maroon  (t, a, b, o, s); }
  G(Fuchsia ) { P_; Fuchsia (t, a, b, o, s); }
  G(Olive   ) { P_; Olive   (t, a, b, o, s); } }.
