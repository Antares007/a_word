b {
  G(Navy    ) { Yellow_ray (0, 4, b, o, s); }
  G(Maroon  ) { }
  G(Lime    ) { Yellow_ray (0, 4, b, o, s); }
  G(Olive   ) { //Yellow_ray (0, 4, b, o, s);
  }
  G(Fuchsia ) { Yellow_ray (0, 4, b, o, s); }
}.
o {
  G(Purple  ) { Fuchsia_ray(t, a, b, o, s); }
  G(Yellow  ) { Olive_ray  (t, a, b, o, s); }
  G(Green   ) { Lime_ray   (t, a, b, o, s); }
  G(Red     ) { Maroon_ray (t, a, b, o, s); }
  G(Blue    ) { Navy_ray   (t, a, b, o, s); }
}.
tab { 
  G(Navy    ) { ((n_t*)o[b])[3] (t, a, b + 1, o, s); }
  G(Maroon  ) { ((n_t*)o[b])[2] (t, a, b + 1, o, s); }
  G(Lime    ) { ((n_t*)o[b])[1] (t, a, b + 1, o, s); }
  G(Olive   ) { ((n_t*)o[b])[0] (t, a, b + 1, o, s); }
  G(Fuchsia ) { ((n_t )o[b])    (t, a, b + 1, o, s); }
}.
twist {
  G(Yellow) { Red   (t, a, b, o, s); }
  G(Green ) { Blue  (t, a, b, o, s); }
  G(Red   ) { Yellow(t, a, b, o, s); }
  G(Blue  ) { Green (t, a, b, o, s); }
}.
set {
  G(Yellow) { Yellow(0, a - 1, b, o, o[a - 1]); }
  G(Green ) { Green (0, a - 1, b, o, o[a - 1]); }
  G(Red   ) { Red   (0, a - 1, b, o, o[a - 1]); }
  G(Blue  ) { Blue  (0, a - 1, b, o, o[a - 1]); }
}.
print {
  N(printit) {
    const char*scolor = o[--a];
    n_t color = o[--a];
    Printf("P_%s(", scolor); for(long i = 4; i < a; i++) Printf("%s", o[i]); Printf(")\n");
    a = 4;
    color(t, a, b, o, s);
  }
  G(Yellow  ) { o[a++] = Yellow; o[a++] = "Yellow"; printit(t, a, b, o, s); }
  G(Green   ) { o[a++] = Green;  o[a++] = "Green";  printit(t, a, b, o, s); }
  G(Red     ) { o[a++] = Red;    o[a++] = "Red";    printit(t, a, b, o, s); }
  G(Blue    ) { o[a++] = Blue;   o[a++] = "Blue";   printit(t, a, b, o, s); }
}.
id {}.
s_aaaaaaaaa { G(Yellow) { Yellow(t, a, b, o, "aaaaaaaaa"); } }.
s_abc       { G(Yellow) { Yellow(t, a, b, o, "abc"); } }.
s_ss        { G(Yellow) { Yellow(t, a, b, o, "ss"); } }.
