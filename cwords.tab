b {
  G(Navy    ) { Yellow (0, 5, b, o, s); }
  G(Maroon  ) { }
  G(Lime    ) { Yellow (0, 5, b, o, s); }
  G(Olive   ) { }
  G(Fuchsia ) { Yellow (0, 5, b, o, s); }
}.
o {
  G(Purple  ) { Fuchsia(t, a, b, o, s); }
  G(Yellow  ) { Olive  (t, a, b, o, s); }
  G(Green   ) { Lime   (t, a, b, o, s); }
  G(Red     ) { Maroon (t, a, b, o, s); }
  G(Blue    ) { Navy   (t, a, b, o, s); }
}.
tab { 
  G(Navy    ) { ((n_t*)o[b])[3](t, a, b + 1, o, s); }
  G(Maroon  ) { ((n_t*)o[b])[2](t, a, b + 1, o, s); }
  G(Lime    ) { ((n_t*)o[b])[1](t, a, b + 1, o, s); }
  G(Olive   ) { ((n_t*)o[b])[0](t, a, b + 1, o, s); }
  G(Fuchsia ) { ((n_t)o[b])    (t, a, b + 2, o, s); }
}.
print {
  N(print) {
    const char*scolor = o[--a];
    n_t color = o[--a];
    Printf("P_%s(", scolor); for(long i = 5; i < a; i++) Printf("%s", o[i]); Printf(")\n");
    a = 5;
    color(t, a, b, o, s);
  }
  G(Yellow) { o[a++] = Yellow; o[a++] = "Yellow"; print(t, a, b, o, s); }
  G(Green ) { o[a++] = Green;  o[a++] = "Green";  print(t, a, b, o, s); }
}.
s_ab  { G(Yellow) { Yellow(t, a, b, o, "ab"); } }.
s_ba  { G(Yellow) { Yellow(t, a, b, o, "ba"); } }.
s_abc { G(Yellow) { Yellow(t, a, b, o, "abc"); } }.
s_ss  { G(Yellow) { Yellow(t, a, b, o, "ss"); } }.
s_s   { G(Yellow) { Yellow(t, a, b, o, "s"); } }.
